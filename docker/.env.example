# ============================================================================
# SECURITY NOTICE
# ============================================================================
# This is a template file. To use:
#   1. Copy this file to .env (in the same directory)
#   2. Generate a secure password: python -c "import secrets; print(secrets.token_urlsafe(32))"
#   3. Replace GENERATE_SECURE_PASSWORD_HERE with your generated password
#   4. NEVER commit .env file to version control!
# ============================================================================

# ============================================================================
# DocuSearch MVP - Environment Configuration
# ============================================================================
# Copy this file to .env and customize for your environment
#
# Quick Start:
#   cp .env.template .env
#   # Edit .env with your settings
#   docker-compose up
# ============================================================================

# ============================================================================
# Project Configuration
# ============================================================================
PROJECT_NAME=docusearch-mvp
PROJECT_VERSION=0.1.0
ENVIRONMENT=development  # development | staging | production

# ============================================================================
# Service Ports
# ============================================================================
# Web UI and file upload
COPYPARTY_PORT=8000

# ChromaDB vector database API
CHROMADB_PORT=8001

# Processing worker status API (optional)
WORKER_PORT=8002

# ============================================================================
# Volume Mounts
# ============================================================================
# Uploaded documents directory
UPLOAD_DIR=../data/uploads

# Model cache (14GB+ for ColNomic 7B)
MODELS_CACHE=../data/models

# ChromaDB persistence
CHROMA_DATA=../data/chroma_db

# Application logs
LOGS_DIR=../data/logs

# ============================================================================
# Model Configuration
# ============================================================================
# ColPali model identifier
# Default: vidore/colpali-v1.2 (ColPali v1.2)
MODEL_NAME=vidore/colpali-v1.2

# Model precision: fp16 | int8
# fp16: Better quality, 14GB memory, 6s per page
# int8: Faster, 7GB memory, 3s per page (slight quality drop)
MODEL_PRECISION=fp16

# Compute device: mps | cuda | cpu
# mps:  M1/M2 Mac GPU (recommended for Mac)
# cuda: NVIDIA GPU
# cpu:  CPU fallback (slow)
# Note: Auto-fallback enabled if specified device unavailable
DEVICE=mps

# Batch sizes (adjust based on available memory)
# Visual: Images per batch (4 for 16GB RAM, 2 for 8GB RAM)
BATCH_SIZE_VISUAL=4

# Text: Text chunks per batch (8 for 16GB RAM, 4 for 8GB RAM)
BATCH_SIZE_TEXT=8

# ============================================================================
# Processing Configuration
# ============================================================================
# Maximum file size in MB
MAX_FILE_SIZE_MB=100

# Supported document formats (comma-separated)
# Documents: pdf, docx, pptx, xlsx
# Text/Web: md, html, htm, xhtml, asciidoc
# Data: csv
# Images: png, jpg, jpeg, tiff, bmp, webp
# Multimedia: vtt, wav, mp3
# Specialized: xml (USPTO/JATS), json (Docling)
SUPPORTED_FORMATS=pdf,docx,pptx,xlsx,md,html,htm,xhtml,asciidoc,csv,png,jpg,jpeg,tiff,bmp,webp,vtt,wav,mp3,xml,json

# Text chunking configuration
# Average words per chunk
TEXT_CHUNK_SIZE=250

# Word overlap between chunks
TEXT_CHUNK_OVERLAP=50

# Page rendering DPI for visual processing
PAGE_RENDER_DPI=150

# ============================================================================
# Enhanced Docling Features (Wave 5)
# ============================================================================
# Enable table structure recognition with TableFormer
ENABLE_TABLE_STRUCTURE=true

# Enable picture type classification (chart, diagram, photo, logo)
ENABLE_PICTURE_CLASSIFICATION=true

# Enable code block language detection (adds processing overhead)
ENABLE_CODE_ENRICHMENT=false

# Enable formula LaTeX extraction (adds processing overhead)
ENABLE_FORMULA_ENRICHMENT=false

# Chunking strategy: legacy | hybrid
# legacy: Word-based sliding window (backward compatible)
# hybrid: Document-aware chunking with context (recommended)
CHUNKING_STRATEGY=hybrid

# Maximum tokens per chunk
MAX_CHUNK_TOKENS=512

# Minimum tokens per chunk
MIN_CHUNK_TOKENS=100

# Merge adjacent small chunks with same headings
MERGE_PEER_CHUNKS=true

# TableFormer mode: fast | accurate
# fast:     Faster but less accurate table structure
# accurate: Better quality for complex tables (recommended)
TABLE_STRUCTURE_MODE=accurate

# Image generation scale factor (1.0-4.0)
IMAGES_SCALE=2.0

# ============================================================================
# ChromaDB Configuration
# ============================================================================
# ChromaDB host (use service name in docker-compose)
CHROMA_HOST=chromadb

# ChromaDB port (internal container port)
CHROMA_PORT=8000

# Collection names
VISUAL_COLLECTION=visual_collection
TEXT_COLLECTION=text_collection

# Batch size for ChromaDB inserts
CHROMA_BATCH_SIZE=100

# ============================================================================
# Performance Tuning
# ============================================================================
# Number of parallel processing workers (1 for MVP)
WORKER_THREADS=1

# Enable processing queue (Wave 4 feature)
ENABLE_QUEUE=false

# Cache embeddings in memory (Wave 4 feature)
CACHE_EMBEDDINGS=false

# ============================================================================
# Logging Configuration
# ============================================================================
# Log level: DEBUG | INFO | WARNING | ERROR
LOG_LEVEL=INFO

# Log format: json | text
LOG_FORMAT=json

# Log file path
LOG_FILE=/data/logs/worker.log

# ============================================================================
# Security (Production)
# ============================================================================
# Enable copyparty authentication (disable for MVP)
COPYPARTY_AUTH_ENABLED=false

# Admin username (if authentication enabled)
COPYPARTY_USERNAME=admin

# Admin password (KEEP SECRET! Generated: _Rem3XUS...)
# DO NOT commit this file to version control!
COPYPARTY_PASSWORD=GENERATE_SECURE_PASSWORD_HERE

# ============================================================================
# Development Settings
# ============================================================================
# Hot reload source code (mount src/ as volume)
DEV_MODE=true

# Enable debug output
DEBUG=false

# ============================================================================
# Notes
# ============================================================================
# Memory Requirements:
#   - FP16 mode: 14GB+ for model + 2GB for processing = 16GB recommended
#   - INT8 mode:  7GB+ for model + 2GB for processing =  9GB minimum
#
# Performance Targets:
#   - FP16: 6 seconds per page, <500ms search
#   - INT8: 3 seconds per page, <500ms search
#
# Model Cache:
#   - ColNomic 7B model will be downloaded on first run (~14GB)
#   - Subsequent runs will use cached model
#   - Cache location: MODELS_CACHE directory
#
# Port Allocation:
#   - 8000: Copyparty web UI
#   - 8001: ChromaDB API
#   - 8002: Worker status API (optional)
# ============================================================================
